FROM multiarch/qemu-user-static:x86_64-aarch64 as qemu

# Download QEMU, see https://github.com/docker/hub-feedback/issues/1261
# ENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v7.0.0%2Bbalena1/qemu-7.0.0.balena1-aarch64.tar.gz
# RUN apk add curl && curl -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1

# FROM 089465505731.dkr.ecr.ap-southeast-1.amazonaws.com/jenkins_buildah_dotnet_sdk_aspnet:aspnet-6.0 AS base
# FROM --platform=linux/arm64 mcr.microsoft.com/dotnet/aspnet:6.0 AS base
#FROM mcr.microsoft.com/dotnet/aspnet:6.0-jammy AS base
FROM --platform=linux/arm64 mcr.microsoft.com/dotnet/aspnet:6.0-alpine3.19 AS base 
# COPY --from=builder qemu-aarch64-static /usr/bin
COPY --from=qemu /usr/bin/qemu-aarch64-static /usr/bin/
WORKDIR /app
EXPOSE 80
EXPOSE 8080
ENV DEBIAN_FRONTEND noninteractive
ARG TRACER_VERSION    
RUN uname -m
RUN apk update && apk upgrade \
        && apk add --upgrade --no-cache \
            curl \
            git \
            icu-data-full \
            icu-libs \
            gcompat \
            binutils \
            libc6-compat \
            qemu \
            qemu-aarch64 \
            gcc \
            g++
RUN apk update

# RUN dpkg --add-architecture arm64 \
# && dpkg --print-foreign-architectures
# RUN sed -i "s/deb h/deb [arch=amd64] h/g" /etc/apt/sources.list
# RUN apt-get update -y && \
#     apt-get -y install curl
RUN echo 'install dotnet tracer' && \
    mkdir -p /opt/datadog \
    && mkdir -p /var/log/datadog \
    && curl -LO https://github.com/DataDog/dd-trace-dotnet/releases/download/v${TRACER_VERSION}/datadog-dotnet-apm-${TRACER_VERSION}-musl.tar.gz    \
    && tar -C /opt/datadog -xzf datadog-dotnet-apm-${TRACER_VERSION}-musl.tar.gz \
    && sh /opt/datadog/createLogPath.sh \
    && rm -f datadog-dotnet-apm-${TRACER_VERSION}-musl.tar.gz \
#ENV HTTP2ONLY_PORT=8080

ARG tag=NA
ENV IMAGE_TAG=${tag}

ARG asmver=NA
ENV ASSEMBLY_VERSION=${asmver}

# FROM 089465505731.dkr.ecr.ap-southeast-1.amazonaws.com/jenkins_buildah_dotnet_sdk_aspnet:sdk-6.0 AS build
# FROM --platform=linux/arm64 mcr.microsoft.com/dotnet/sdk:6.0 AS build
FROM --platform=linux/arm64 mcr.microsoft.com/dotnet/sdk:6.0-alpine3.19 AS build
# FROM mcr.microsoft.com/dotnet/sdk:6.0-jammy AS build
ARG asmver
WORKDIR /src
COPY ["nuget.config", "."]
COPY src .
WORKDIR /src/ThreeDomainServer.CardRanges.Service
RUN dotnet restore
RUN dotnet build   -c Release -o /app/build -p:Version=${asmver:-0.0.0.0}
#--runtime linux-arm64  --self-contained false
FROM build AS publish
ARG asmver
RUN dotnet publish  -c Release -o /app/publish -p:Version=${asmver:-0.0.0.0} -p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "ThreeDomainServer.CardRanges.Service.dll"]